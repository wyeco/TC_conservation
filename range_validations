###  codes for external checking the alphahull range maps ####
library(dplyr)
library(reshape)
library(raster)
library(ecospat)
library(plyr)
library(ggplot2)
library(rgdal)

##### 1) compare range maps (EU-forest and "little maps")######

## (a)  EU-forest can be downloaded via: https://www.nature.com/articles/sdata2016123  
## there are 203 species with alpha-hull ranges
  
#  store shapefile names as a list
eu_forest_sp <- list.files("./shapefiles_hull", pattern = "\\.shp$", full.names = T)
summary(eu_forest_sp) 
# generate the species list for species with a range/distribution shp file
#  store shapefile names as a list
TC_shp_files6 <- list.files("./ahull_range", pattern = "\\.tif$")
summary(TC_shp_files6) 

eu_forest_sp_clean_match <- left_join(eu_forest_sp, TC_shp_files6, by = "species")
#  totally there are 26 species missing from our data, that is, 203-26 = 177 shared species.
write.csv(eu_forest_sp_clean_match, file = "eu_forest_sp_clean_match.csv")


##### I then used ArcGIS to prepre the file by merging all the species existing in both TC data and EU-Forest data. 137 species left.

EU_TC_clip <- rgdal::readOGR(dsn =  "./EU_forest_EOOs", layer = "EU_TC_Clip")
print(bbox(EU_TC_clip), digits=12)
colnames(EU_TC_clip@data) <- "binomial"

## using letsR to rasterize the layer with 1 degree resolution
EU_TC_clip_mod <- lets.presab(EU_TC_clip, xmn = -18, xmx = 34, ymn = 26, ymx = 71,resol = 1, 
                             remove.cells = TRUE, remove.sp = TRUE, show.matrix = FALSE,count = TRUE,   
                             crs = CRS("+proj=longlat +datum=WGS84"))

summary(EU_TC_clip_mod)  ### summary the presence-absence matrix
plot(EU_TC_clip_mod, main = "EU_TC Species Richness")

EU_TC_overlap <- ecospat.co_occurrences (EU_TC_clip_mod$Presence_and_Absence_Matrix[, -c(1:2)])

## change the similarity matrix into pariwise combination

m <- as.matrix(EU_TC_overlap)
m2 <- melt(m)[melt(upper.tri(m))$value,]
names(m2) <- c("c1", "c2", "similarity")
m3 <- gsub("_my", "", m2$c1)
m3_2 <- gsub("_my", "", m2$c2)
m4 <- as.data.frame(cbind(m3, m3_2, m2$similarity))
##select the same species existing in both datasets
EU_TC_overlap_same_sp <- m4[m4$m3==m4$m3_2, ]
#write.csv(EU_TC_overlap_same_sp, file = "EU_TC_overlap_same_sp.csv")
str(EU_TC_overlap_same_sp)
EU_TC_overlap_same_sp$V3 <- as.numeric(EU_TC_overlap_same_sp$V3)
hist(as.numeric(EU_TC_overlap_same_sp$V3))

#### (b) Little forest maps   ######

little_TC_clip <- rgdal::readOGR(dsn =  "./little_maps", layer = "Merged_little_TC_map_Clip")
print(bbox(little_TC_clip), digits=12)
colnames(little_TC_clip@data) <- "binomial"

## using letsR to rasterize the layer with 1 degree resolution
little_TC_clip_mod <- lets.presab(little_TC_clip, xmn = -169, xmx = -15, ymn = 6, ymx = 75,resol = 1, 
                              remove.cells = TRUE, remove.sp = TRUE, show.matrix = FALSE,count = TRUE,   
                              crs = CRS("+proj=longlat +datum=WGS84"))

summary(little_TC_clip_mod)  ### summary the presence-absence matrix
plot(little_TC_clip_mod, main = "Little TC Species Richness")


Little_TC_overlap <- ecospat.co_occurrences (little_TC_clip_mod$Presence_and_Absence_Matrix[, -c(1:2)])

## change the similarity matrix into pariwise combination

m_little <- as.matrix(Little_TC_overlap)
m2_little <- melt(m_little)[melt(upper.tri(m_little))$value,]
names(m2_little) <- c("c1", "c2", "similarity")
m3_little <- gsub("_", " ", m2_little$c1)
m3_2_little <- gsub("_", " ", m2_little$c2)
m4_little <- as.data.frame(cbind(m3_little, m3_2_little, m2_little$similarity))
##select the same species existing in both datasets
little_TC_overlap_same_sp <- m4_little[m4_little$m3_little==m4_little$m3_2_little, ]
#write.csv(EU_TC_overlap_same_sp, file = "EU_TC_overlap_same_sp.csv")
str(little_TC_overlap_same_sp)

## import the two dfs
ext_validation_EU_forest <- read.csv("D:/Wenyong/2_WDPA_3D/ext_validation/ext_validation_EU_forest.csv", header = T, sep = ';')
ext_validation_Little_map <- read.csv("D:/Wenyong/2_WDPA_3D/ext_validation/ext_validation_Little_map.csv", header = T, sep = ';')
ext_validation_EU_forest$group <- "EU-Forest"
ext_validation_Little_map$group <- "Little maps"
ext_validation_both <- rbind(ext_validation_EU_forest, ext_validation_Little_map)

hist(ext_validation_EU_forest$v3)
hist(ext_validation_Little_map$V3)



mean_v3 <- ddply(ext_validation_both, "group", summarise, grp.mean=mean(v3))
head(mean_v3)

ggplot(ext_validation_both, aes(x=v3, color=group)) +
  stat_ecdf() +
  geom_vline(data=mean_v3, aes(xintercept=grp.mean, color=group),
             linetype="dashed")+
    scale_x_continuous(expand = c(0, 0), limits = c(0,1))  +scale_y_continuous(expand = c(0, 0), limits = c(0,1)) + 
    scale_color_brewer(palette="Set1")+
    theme_classic() +
  stat_ecdf(aes(color = group,linetype = group), 
            geom = "step", size = 1.5) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        text = element_text(size = 16),
        legend.position = c(0.1,0.8)) +
   ylab("Cumulative percentage") +
   xlab("Species co-occurrence index")

pdf("./Fig.S8.pdf", useDingbats=FALSE, width=8, height=8)

dev.off()



############ 2 validation using Sandel et al. 2020 GEB data  #############

all_shapes_467526mod <- rgdal::readOGR(dsn =  "./input_shp", layer = "TCSum")
print(bbox(all_shapes_467526mod), digits=12)
st_crs(all_shapes_467526mod)
colnames(all_shapes_467526mod@data) <- "binomial"
## check the geometry
gIsValid(all_shapes_467526mod)
sum(gIsValid(all_shapes_467526mod, byid=TRUE)==FALSE)
all_shapes_6mod_checked <- gBuffer(all_shapes_467526mod, byid=TRUE, width=0)

## import Sandel et al.,2020 GEB shapefile
gift_tree_SR <- rgdal::readOGR(dsn =  "./Tree_PE", layer = "Tree_PE")
plot(gift_tree_SR)
summary(gift_tree_SR)
gift_tree_SR <-   spTransform(gift_tree_SR, CRSobj = CRS(proj4string(all_shapes_467526mod)))

gIsValid(gift_tree_SR, byid=TRUE)

gift_tree_SR <- gBuffer(gift_tree_SR, byid=TRUE, width=0)
sum(gIsValid(gift_tree_SR, byid=TRUE)==FALSE)

# Select only the elements of grid that intersect glonaf
all_shapes_6mod_glonaf <- all_shapes_6mod_checked[gift_tree_SR,]

gift_tree_SR@data$count_tree <- unlist(over(x =gift_tree_SR ,y=all_shapes_6mod_glonaf[,"binomial"],fn="length"))

## obtain the presence-absence matrix
projection(all_shapes_6mod_checked) <- projection(gift_tree_SR)

## using letsR to rasterize the layer
PAMAhull_tree_SR <- lets.presab.grid(all_shapes_6mod_checked, gift_tree_SR, "ID")  ### all tree species
# To plot the richness map
rich_plus1 <- rowSums(PAMAhull_tree_SR$PAM) + 1
colfunc <- colorRampPalette(c("#fff5f0", "#fb6a4a", "#67000d"))
colors <- c("white", colfunc(max(rich_plus1)))
plot(PAMAhull_tree_SR$grid, border = "gray40",
     col = colors[rich_plus1])
map(add = TRUE)

summary(PAMAhull_tree_SR) 
PAMAhull_tree_SR_df <- PAMAhull_tree_SR$grid@data

plot(PAMAhull_tree_SR_df$S ~ rich_plus1)
abline(lm(PAMAhull_tree_SR_df$S ~ rich_plus1))
summary(lm(PAMAhull_tree_SR_df$S ~ rich_plus1))

reg1 <- lm(log10(PAMAhull_tree_SR_df$S) ~ log10(rich_plus1))
resid.reg1 <- resid(reg1)
plot(resid(reg1))
write.csv(resid.reg1, file = "residual_SR.csv") ## export it and use ArcGis to plot the residual

PAMAhull_tree_SR_df<- cbind(PAMAhull_tree_SR_df, rich_plus1)


ggplot(PAMAhull_tree_SR_df, aes(x= rich_plus1, y= S)) +
  geom_point(shape=1) +    # Use hollow circles
  geom_abline(slope=1) +
  geom_smooth(method=lm) +
    scale_x_continuous(expand = c(0, 0), limits = c(0,3500)) + scale_y_continuous(expand = c(0, 0), limits = c(0,3500)) +
  theme_bw() +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        #strip.background = element_rect(colour="white", fill="white"),
        text = element_text(size = 16),
        legend.position = "none") +
  ylab("Species richness (Sandel et al. 2020)") +
  xlab("Species richness (Observed)")

pdf("Fig.S9.pdf", useDingbats=FALSE, width=8, height=8)

dev.off()




